sapply(num, function(x) openxlsx::addWorksheet(wb, x))
for ( i in 1:length(num) ) {
openxlsx::writeData(wb, i, sample.matrix, colNames = FALSE)
}
openxlsx::saveWorkbook(wb, file = "openxlsx_test.xlsx", overwrite = TRUE)
}
mean.time <- read.table(header = TRUE, text =
'package numSheet   meanTime
xlsx        1       7.71
xlsx        3      23.14
xlsx        5      39.48
xlsx       10      75.75
openxlsx        1       6.62
openxlsx        3      20.96
openxlsx        5      36.82
openxlsx       10      74.73'
)
ggplot(data=datn, aes(x=numSheet, y=medianTime, group=package, colour=supp)) + geom_line() + geom_point()
ggplot(data=mean.time, aes(x=numSheet, y=medianTime, group=package, colour=supp)) + geom_line() + geom_point()
ggplot(data=mean.time, aes(x=numSheet, y=meanTime, group=package, colour=supp)) + geom_line() + geom_point()
ggplot(data=mean.time, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point()
mean.time <- read.table(header = TRUE, text =
'package numSheet meanTime (s)
xlsx        1       7.71
xlsx        3      23.14
xlsx        5      39.48
xlsx       10      75.75
openxlsx        1       6.62
openxlsx        3      20.96
openxlsx        5      36.82
openxlsx       10      74.73'
)
ggplot(data=mean.time, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point()
ggplot(data=mean.time, aes(x=numSheet, y=meanTime (s), group=package, colour=package)) + geom_line() + geom_point()
mean.time <- read.table(header = TRUE, text =
'package numSheet meanTime_(s)
xlsx        1       7.71
xlsx        3      23.14
xlsx        5      39.48
xlsx       10      75.75
openxlsx        1       6.62
openxlsx        3      20.96
openxlsx        5      36.82
openxlsx       10      74.73'
)
ggplot(data=mean.time, aes(x=numSheet, y=meanTime_(s), group=package, colour=package)) + geom_line() + geom_point()
mean.time <- read.table(header = TRUE, text =
'package numSheet   meanTime
xlsx        1       7.71
xlsx        3      23.14
xlsx        5      39.48
xlsx       10      75.75
openxlsx        1       6.62
openxlsx        3      20.96
openxlsx        5      36.82
openxlsx       10      74.73'
)
ggplot(data=mean.time, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point()
a <- c("xlsx", "xlsx", "openxlsx", "openxlsx",)
b <- c(2, 3, 4, 3)
c <- c(24, 12, 23, 15)
dataframe <- data.frame(a, b, c)
library(ggplot2)
library(ggplot2)
a <- c("xlsx", "xlsx", "openxlsx", "openxlsx")
b <- c(2, 3, 4, 3)
c <- c(24, 12, 23, 15)
dataframe <- data.frame(a, b, c)
names(dataframe) <- c("package", "numSheet", "meanTime")
ggplot(data=dataframe, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point()
a <- c("xlsx", "xlsx", "openxlsx", "openxlsx")
b <- c(2, 3, 4, 5)
c <- c(24, 12, 23, 15)
dataframe <- data.frame(a, b, c)
names(dataframe) <- c("package", "numSheet", "meanTime")
ggplot(data=dataframe, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point()
a <- c("xlsx", "xlsx", "openxlsx", "openxlsx")
b <- c(2, 3, 4, 5)
c <- c(12, 24, 15, 23)
dataframe <- data.frame(a, b, c)
names(dataframe) <- c("package", "numSheet", "meanTime")
ggplot(data=dataframe, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point()
a <- c("xlsx", "xlsx", "openxlsx", "openxlsx")
b <- c(2, 3, 4, 5)
c <- c(12, 24, 15, 23)
dataframe <- data.frame(a, b, c)
names(dataframe) <- c("package", "numSheet", "meanTime")
ggplot(data=dataframe, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point()
a <- c("xlsx", "xlsx", "openxlsx", "openxlsx")
b <- c(2, 3, 4, 5)
c <- c(20, 24, 15, 23)
dataframe <- data.frame(a, b, c)
names(dataframe) <- c("package", "numSheet", "meanTime")
ggplot(data=dataframe, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point()
mean.time <- read.table(header = TRUE, text =
'package numSheet   meanTime
xlsx        1       7.71
xlsx        3      23.14
xlsx        5      39.48
xlsx       10      75.75
openxlsx        1       6.62
openxlsx        3      20.96
openxlsx        5      36.82
openxlsx       10      74.73'
)
median.time <- read.table(header = TRUE, text =
'package numSheet   medianTime
xlsx        1       6.93
xlsx        3      23.41
xlsx        5      38.55
xlsx       10      75.26
openxlsx        1       6.61
openxlsx        3      20.39
openxlsx        5      36.77
openxlsx       10      74.14'
)
min.time <- read.table(header = TRUE, text =
'package numSheet   minnTime
xlsx        1       6.77
xlsx        3      19.36
xlsx        5      33.85
xlsx       10      65.61
openxlsx        1       6.32
openxlsx        3      18.56
openxlsx        5      34.57
openxlsx       10      71.27'
)
max.time <- read.table(header = TRUE, text =
'package numSheet   maxTime
xlsx        1      10.18
xlsx        3      34.61
xlsx        5      48.55
xlsx       10      87.86
openxlsx        1       7.14
openxlsx        3      23.39
openxlsx        5      38.59
openxlsx       10      80.94'
)
p1 <- ggplot(data=mean.time, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point()
p2 <- ggplot(data=mean.time, aes(x=numSheet, y=medianTime, group=package, colour=package)) + geom_line() + geom_point()
p3 <- ggplot(data=mean.time, aes(x=numSheet, y=minTime, group=package, colour=package)) + geom_line() + geom_point()
p4 <- ggplot(data=mean.time, aes(x=numSheet, y=maxTime, group=package, colour=package)) + geom_line() + geom_point()
multiplot(p1, p2, p3, p4, cols=2)
library(ggplot2)
multiplot(p1, p2, p3, p4, cols=2)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(p1, p2, p3, p4, cols=2)
p1 <- ggplot(data=mean.time, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point()
p2 <- ggplot(data=median.time, aes(x=numSheet, y=medianTime, group=package, colour=package)) + geom_line() + geom_point()
p3 <- ggplot(data=min.time, aes(x=numSheet, y=minTime, group=package, colour=package)) + geom_line() + geom_point()
p4 <- ggplot(data=max.time, aes(x=numSheet, y=maxTime, group=package, colour=package)) + geom_line() + geom_point()
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(p1, p2, p3, p4, cols=2)
mean.time <- read.table(header = TRUE, text =
'package numSheet   meanTime
xlsx        1       7.71
xlsx        3      23.14
xlsx        5      39.48
xlsx       10      75.75
openxlsx        1       6.62
openxlsx        3      20.96
openxlsx        5      36.82
openxlsx       10      74.73'
)
median.time <- read.table(header = TRUE, text =
'package numSheet   medianTime
xlsx        1       6.93
xlsx        3      23.41
xlsx        5      38.55
xlsx       10      75.26
openxlsx        1       6.61
openxlsx        3      20.39
openxlsx        5      36.77
openxlsx       10      74.14'
)
min.time <- read.table(header = TRUE, text =
'package numSheet   minTime
xlsx        1       6.77
xlsx        3      19.36
xlsx        5      33.85
xlsx       10      65.61
openxlsx        1       6.32
openxlsx        3      18.56
openxlsx        5      34.57
openxlsx       10      71.27'
)
max.time <- read.table(header = TRUE, text =
'package numSheet   maxTime
xlsx        1      10.18
xlsx        3      34.61
xlsx        5      48.55
xlsx       10      87.86
openxlsx        1       7.14
openxlsx        3      23.39
openxlsx        5      38.59
openxlsx       10      80.94'
)
p1 <- ggplot(data=mean.time, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point()
p2 <- ggplot(data=median.time, aes(x=numSheet, y=medianTime, group=package, colour=package)) + geom_line() + geom_point()
p3 <- ggplot(data=min.time, aes(x=numSheet, y=minTime, group=package, colour=package)) + geom_line() + geom_point()
p4 <- ggplot(data=max.time, aes(x=numSheet, y=maxTime, group=package, colour=package)) + geom_line() + geom_point()
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
layout.pos.col = matchidx$col))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
}
}
}
multiplot(p1, p2, p3, p4, cols=2)
p1 <- ggplot(data=mean.time, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Mean Time")
p2 <- ggplot(data=median.time, aes(x=numSheet, y=medianTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Median Time")
p3 <- ggplot(data=min.time, aes(x=numSheet, y=minTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Min Time")
p4 <- ggplot(data=max.time, aes(x=numSheet, y=maxTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Max Time")
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(p1, p2, p3, p4, cols=2)
p1 <- ggplot(data=mean.time, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Mean Time") +
theme(text = element_text(size=20))
p2 <- ggplot(data=median.time, aes(x=numSheet, y=medianTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Median Time") +
theme(text = element_text(size=20))
p3 <- ggplot(data=min.time, aes(x=numSheet, y=minTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Min Time") +
theme(text = element_text(size=20))
p4 <- ggplot(data=max.time, aes(x=numSheet, y=maxTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Max Time") +
theme(text = element_text(size=20))
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(p1, p2, p3, p4, cols=2)
p1 <- ggplot(data=mean.time, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Mean Time") +
theme(text = element_text(size=5))
p2 <- ggplot(data=median.time, aes(x=numSheet, y=medianTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Median Time") +
theme(text = element_text(size=5))
p3 <- ggplot(data=min.time, aes(x=numSheet, y=minTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Min Time") +
theme(text = element_text(size=5))
p4 <- ggplot(data=max.time, aes(x=numSheet, y=maxTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Max Time") +
theme(text = element_text(size=5))
multiplot(p1, p2, p3, p4, cols=2)
p1 <- ggplot(data=mean.time, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Mean Time") +
theme(text = element_text(size=7))
p2 <- ggplot(data=median.time, aes(x=numSheet, y=medianTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Median Time") +
theme(text = element_text(size=7))
p3 <- ggplot(data=min.time, aes(x=numSheet, y=minTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Min Time") +
theme(text = element_text(size=7))
p4 <- ggplot(data=max.time, aes(x=numSheet, y=maxTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Max Time") +
theme(text = element_text(size=7))
multiplot(p1, p2, p3, p4, cols=2)
library(ggplot2)
data <- read.table(header = TRUE, text =
'package numSheet       Time measure
xlsx        1       7.71    mean
xlsx        3      23.14    mean
xlsx        5      39.48    mean
xlsx       10      75.75    mean
openxlsx        1       6.62    mean
openxlsx        3      20.96    mean
openxlsx        5      36.82    mean
openxlsx       10      74.73    mean
xlsx        1       6.93  median
xlsx        3      23.41  median
xlsx        5      38.55  median
xlsx       10      75.26  median
openxlsx        1       6.61  median
openxlsx        3      20.39  median
openxlsx        5      36.77  median
openxlsx       10      74.14  median
xlsx        1       6.77     min
xlsx        3      19.36     min
xlsx        5      33.85     min
xlsx       10      65.61     min
openxlsx        1       6.32     min
openxlsx        3      18.56     min
openxlsx        5      34.57     min
openxlsx       10      71.27     min
xlsx        1      10.18     max
xlsx        3      34.61     max
xlsx        5      48.55     max
xlsx       10      87.86     max
openxlsx        1       7.14     max
openxlsx        3      23.39     max
openxlsx        5      38.59     max
openxlsx       10      80.94     max'
)
p1 <- ggplot(data=data, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Mean Time") +
theme(text = element_text(size=7)) + facet_wrap( ~ measure, col = 2)
p1 <- ggplot(data=data, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Mean Time") +
theme(text = element_text(size=7)) + facet_wrap( ~ measure, ncol = 2)
ggplot(data=data, aes(x=numSheet, y=meanTime, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Mean Time") +
theme(text = element_text(size=7)) + facet_wrap( ~ measure, ncol = 2)
ggplot(data=data, aes(x=numSheet, y=Time, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Mean Time") +
theme(text = element_text(size=7)) + facet_wrap( ~ measure, ncol = 2)
ggplot(data=data, aes(x=numSheet, y=Time, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Measures of Time") +
theme(text = element_text(size=7)) + facet_wrap( ~ measure, ncol = 2)
data <- read.table(header = TRUE, text =
'package numSheet       Time measure
xlsx        1      10.18     max
xlsx        3      34.61     max
xlsx        5      48.55     max
xlsx       10      87.86     max
openxlsx        1       7.14     max
openxlsx        3      23.39     max
openxlsx        5      38.59     max
openxlsx       10      80.94     max
xlsx        1       7.71    mean
xlsx        3      23.14    mean
xlsx        5      39.48    mean
xlsx       10      75.75    mean
openxlsx        1       6.62    mean
openxlsx        3      20.96    mean
openxlsx        5      36.82    mean
openxlsx       10      74.73    mean
xlsx        1       6.93  median
xlsx        3      23.41  median
xlsx        5      38.55  median
xlsx       10      75.26  median
openxlsx        1       6.61  median
openxlsx        3      20.39  median
openxlsx        5      36.77  median
openxlsx       10      74.14  median
xlsx        1       6.77     min
xlsx        3      19.36     min
xlsx        5      33.85     min
xlsx       10      65.61     min
openxlsx        1       6.32     min
openxlsx        3      18.56     min
openxlsx        5      34.57     min
openxlsx       10      71.27     min
'
)
ggplot(data=data, aes(x=numSheet, y=Time, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Measures of Time") +
source('~/.active-rstudio-document', echo=TRUE)
library(ggplot2)
data <- as.data.frame(read.table(header = TRUE, text =
'package numSheet       Time measure
xlsx        1      10.18     max
xlsx        3      34.61     max
xlsx        5      48.55     max
xlsx       10      87.86     max
openxlsx        1       7.14     max
openxlsx        3      23.39     max
openxlsx        5      38.59     max
openxlsx       10      80.94     max
xlsx        1       7.71    mean
xlsx        3      23.14    mean
xlsx        5      39.48    mean
xlsx       10      75.75    mean
openxlsx        1       6.62    mean
openxlsx        3      20.96    mean
openxlsx        5      36.82    mean
xlsx        1       6.93  median
openxlsx       10      74.73    mean
xlsx        3      23.41  median
xlsx        5      38.55  median
xlsx       10      75.26  median
openxlsx        1       6.61  median
openxlsx        3      20.39  median
openxlsx        5      36.77  median
openxlsx       10      74.14  median
xlsx        1       6.77     min
xlsx        3      19.36     min
xlsx        5      33.85     min
xlsx       10      65.61     min
openxlsx        1       6.32     min
openxlsx        3      18.56     min
openxlsx        5      34.57     min
openxlsx       10      71.27     min
'
))
ggplot(data=data, aes(x=numSheet, y=Time, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Measures of Time") +
theme(text = element_text(size=7)) + facet_wrap( ~ measure, ncol = 2)
str(data$measure)
data <- factor(data$measure, levels = c("mean", "median", "min", "max"))
str(data$measure)
data <- factor(data$measure, levels = c("mean", "median", "min", "max"))
str(data$measure)
ggplot(data=data, aes(x=numSheet, y=Time, group=package, colour=package)) + geom_line() + geom_point() + ggtitle("Measures of Time") +
theme(text = element_text(size=7)) + facet_wrap( ~ measure, ncol = 2)
data <- relevel(data$measure, levels = c("mean", "median", "min", "max"))
library(dplyr)
install.package("dplyr")
install.packages("dplyr")
library(EightyR)
Post_Blog("Mirror_Mirror.Rmd", subtitle = "Who's the fastest of them all", category = c("Package Exploration"), tags =c("R"))
Post_Blog("wine_review.Rmd", subtitle = "Exploring rvest", category = c("Package Exploration"), tags =c("R", "Scraping", "rvest"))
library(EightyR)
Post_Blog("wine_review.Rmd", subtitle = "Exploring rvest", category = c("Package Exploration"), tags =c("R", "Scraping", "rvest"))
Post_Blog("wine_review.Rmd", subtitle = "Exploring rvest", category = c("Package Exploration"), tags =c("R", "Scraping", "rvest"))
